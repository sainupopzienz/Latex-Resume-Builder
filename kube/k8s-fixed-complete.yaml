# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-backend
  labels:
    app: resume-builder-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resume-builder-backend
  template:
    metadata:
      labels:
        app: resume-builder-backend
    spec:
      imagePullSecrets:
      - name: docker-registry-secret
      containers:
      - name: backend
        image: sainupopzienz/resume-backend:v3
        ports:
        - containerPort: 5000
        env:
        - name: MYSQL_HOST
          value: "resume-builder.cbvnzgqo73bf.us-east-1.rds.amazonaws.com"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          value: "resume_user"
        - name: MYSQL_PASSWORD
          value: "resume_password"
        - name: MYSQL_DATABASE
          value: "resume_builder"
        - name: SECRET_KEY
          value: "MtF113YtqdT/NHGxF6xMpuAaqk19/k5Olu8UoXRVvbtQQctve5FjKm7eoUrjXFXvk5dKqbMtsBbP0K+TWc9MJA=="
        - name: SESSION_EXPIRY_HOURS
          value: "24"
        - name: ALLOWED_ORIGINS
          value: "http://resume-builder-frontend-proxy-service,http://resume-builder-frontend-service"
        command: ["sh", "-c"]
        args: ["python database.py && gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 --access-logfile - --error-logfile - app:app"]
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: resume-builder-backend-service
spec:
  selector:
    app: resume-builder-backend
  ports:
  - port: 5000
    targetPort: 5000
  type: ClusterIP
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-frontend
  labels:
    app: resume-builder-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resume-builder-frontend
  template:
    metadata:
      labels:
        app: resume-builder-frontend
    spec:
      imagePullSecrets:
      - name: docker-registry-secret
      containers:
      - name: frontend
        image: sainupopzienz/resume-ui:v3
        ports:
        - containerPort: 80
        env:
        - name: VITE_API_URL
          value: "http://resume-builder-backend-service:5000/api"
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: resume-builder-frontend-service
spec:
  selector:
    app: resume-builder-frontend
  ports:
  - port: 80
    targetPort: 80
  type: NodePort
---
# Nginx ConfigMap for API Proxy
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        # Frontend
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
        
        # API Proxy to Backend
        location /api/ {
            proxy_pass http://resume-builder-backend-service:5000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
# Updated Frontend Deployment with Nginx Proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-frontend-proxy
  labels:
    app: resume-builder-frontend-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resume-builder-frontend-proxy
  template:
    metadata:
      labels:
        app: resume-builder-frontend-proxy
    spec:
      imagePullSecrets:
      - name: docker-registry-secret
      containers:
      - name: frontend
        image: sainupopzienz/resume-ui:v3
        ports:
        - containerPort: 80
        env:
        - name: VITE_API_URL
          value: "http://resume-builder-backend-service:5000/api"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
# Frontend Proxy Service
apiVersion: v1
kind: Service
metadata:
  name: resume-builder-frontend-proxy-service
spec:
  selector:
    app: resume-builder-frontend-proxy
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
  type: NodePort
